<?php

class Workflow {
    private $estado;

    public function __construct($estadoInicial = 'pendiente') {
        $this->estado = $estadoInicial;
    }

    public function avanzar($accion) {
        $transiciones = [
            'pendiente' => [
                'aprobar' => 'aprobado',
                'rechazar' => 'rechazado',
            ]
        ];

        if (isset($transiciones[$this->estado][$accion])) {
            $this->estado = $transiciones[$this->estado][$accion];
            $this->ejecutarPipeline($accion);
            return true;
        }

        return false;
    }

    private function ejecutarPipeline($accion) {
        $pipeline = new Pipeline();

        if ($accion === 'aprobar') {
            $pipeline
                ->pipe(fn($data) => strtoupper($data))
                ->pipe(fn($data) => "Documento aprobado: " . $data);
        } elseif ($accion === 'rechazar') {
            $pipeline
                ->pipe(fn($data) => strtolower($data))
                ->pipe(fn($data) => "Documento rechazado: " . $data);
        }

        echo $pipeline->process("Ejemplo de documento") . "\n";
    }

    public function getEstado() {
        return $this->estado;
    }
}

class Pipeline {
    private $stages = [];

    public function pipe(callable $stage) {
        $this->stages[] = $stage;
        return $this;
    }

    public function process($payload) {
        foreach ($this->stages as $stage) {
            $payload = $stage($payload);
        }
        return $payload;
    }
}

// EjecuciÃ³n
$workflow = new Workflow();
$workflow->avanzar('aprobar');
